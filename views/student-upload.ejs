<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('partials/head') %>
    <style>
		#uploadForm {
			background: white;
			padding: 1em;
		}
        .video-item {
            margin-bottom: 20px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
			background: white;
        }
        .spinner-border {
            width: 3rem;
            height: 3rem;
        }
		.video-container {
			position: relative;
			padding-bottom: 56.25%; /* 16:9 aspect ratio */
			height: 0;
			overflow: hidden;
		}
		.video-container video {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
		}
		.processing-message, .error-message {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			display: flex;
			align-items: center;
			justify-content: center;
			background-color: #f8f9fa;
			border: 1px solid #dee2e6;
		}
    </style>
</head>
<body>
    <%- include('partials/header') %>
    <div class="container mt-4">
        <h1>Potje: <%= room.uniqueIdentifier %></h1>
        <% if (locals.error) { %>
            <div class="alert alert-danger"><%= error %></div>
        <% } %>
        <% if (locals.success) { %>
            <div class="alert alert-success"><%= success %></div>
        <% } %>
        <form id="uploadForm" enctype="multipart/form-data">
			<div class="form-group">
				<label for="title">Video Titel:</label>
				<input type="text" class="form-control" id="title" name="title" required>
			</div>
			<div class="form-group">
				<label for="video">Video Bestand:</label>
				<input type="file" class="form-control-file" id="video" name="video" accept="video/*" required>
			</div>
			<input type="hidden" name="roomId" value="<%= room.id %>">
			<button type="submit" class="btn btn-primary">Upload Video</button>
		</form>
        <div class="progress mt-3" id="uploadProgressBar" style="display: none;">
			<div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
		</div>
        
        <h2 class="mt-4">Jouw Video's</h2>
        <% if (videos.length === 0) { %>
            <p>Je hebt nog geen video's geupload.</p>
        <% } else { %>
            <div class="row">
				<% videos.forEach(video => { %>
					<div class="col-md-6 mb-4">
						<div class="video-item">
							<h3 class="video-title" data-video-id="<%= video.id %>"><%= video.title %></h3>
							<p>Uploaded on: <%= new Date(video.createdAt).toLocaleString() %></p>
							<div class="video-container" data-video-id="<%= video.id %>">
								<% if (video.processingStatus === 'completed') { %>
									<video controls class="img-fluid">
										<source src="/videos/stream/<%= video.filePath %>" type="video/mp4">
										Your browser does not support the video tag or the video format.
									</video>
								<% } else if (video.processingStatus === 'processing' || video.processingStatus === 'pending_transcription' || video.processingStatus === 'transcribing' || video.processingStatus === '') { %>
									<div class="processing-message">
										<p>This video is currently being processed. Please check back later.</p>
									</div>
								<% } else { %>
									<div class="error-message">
										<p>There was an error processing this video. Please try uploading it again.</p>
									</div>
								<% } %>
							</div>
							<div class="mt-3">
								<h5>Comments:</h5>
								<div class="video-comment" data-video-id="<%= video.id %>"><%= video.comment || 'No comments yet. Click to add.' %></div>
							</div>
							<div class="mt-3">
								<h5>Transcription:</h5>
								<div class="video-transcription" data-video-id="<%= video.id %>"><%= video.transcription || 'Transcription not available yet.' %></div>
								<% if (video.editedTranscription) { %>
									<h5 class="mt-2">Edited Transcription:</h5>
									<div class="video-edited-transcription" data-video-id="<%= video.id %>"><%= video.editedTranscription %></div>
								<% } %>
							</div>
							<button class="btn btn-danger mt-2 delete-video" data-video-id="<%= video.id %>">Delete Video</button>
						</div>
					</div>
				<% }) %>
			</div>
        <% } %>
    </div>
    <%- include('partials/footer') %>
	
	
<script>
$(document).ready(function() {
    // Handle video upload
    $('#uploadForm').on('submit', function(e) {
        e.preventDefault();
        var formData = new FormData(this);

        $.ajax({
            xhr: function() {
                var xhr = new window.XMLHttpRequest();
                xhr.upload.addEventListener("progress", function(evt) {
                    if (evt.lengthComputable) {
                        var percentComplete = evt.loaded / evt.total;
                        percentComplete = parseInt(percentComplete * 100);
                        $('#uploadProgressBar').show().find('.progress-bar').width(percentComplete + '%').text(percentComplete + '%');
                    }
                }, false);
                return xhr;
            },
            url: '/videos/upload',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function(response) {
                $('#uploadProgressBar').hide();
                alert('Video uploaded successfully. Video ID: ' + response.videoId);
                if (response.needsConversion) {
                    checkConversionStatus(response.videoId);
                } else {
                    location.reload(); // Reload the page to show the new video
                }
            },
            error: function(xhr, status, error) {
                $('#uploadProgressBar').hide();
                alert('An error occurred while uploading the video: ' + error);
            }
        });
    });

    // Function to check conversion status for .mov files
    function checkConversionStatus(videoId) {
        $.get('/videos/' + videoId + '/conversion-status', function(data) {
            if (data.conversionStatus === 'completed') {
                location.reload(); // Reload the page to show the converted video
            } else if (data.conversionStatus === 'failed') {
                alert('Video conversion failed. Please try uploading again.');
            } else {
                // If still converting, check again after 5 seconds
                setTimeout(function() { checkConversionStatus(videoId); }, 5000);
            }
        });
    }

    // Handle editing for title, comment, and transcription
    $('.video-title, .video-comment, .video-transcription, .video-edited-transcription').each(function() {
        makeEditable($(this), $(this).data('video-id'), $(this).attr('class').split(' ')[0].split('-')[1]);
    });

    // Handle video deletion
    $('.delete-video').on('click', function() {
        var videoId = $(this).data('video-id');
        if (confirm('Are you sure you want to delete this video?')) {
            $.ajax({
                url: '/videos/' + videoId,
                type: 'DELETE',
                success: function(result) {
                    $('[data-video-id="' + videoId + '"]').closest('.col-md-6').remove();
                },
                error: function(xhr, status, error) {
                    alert('An error occurred while deleting the video.');
                }
            });
        }
    });

    // Function to make elements editable
    function makeEditable(element, videoId, field) {
        element.off('click').on('click', function(e) {
            e.stopPropagation();
            if (element.find('input, textarea').length > 0) return;

            var currentText = element.text();
            var inputElement = field === 'title' ? 
                $('<input type="text" class="form-control">').val(currentText) :
                $('<textarea class="form-control">').val(currentText);
            
            element.empty().append(inputElement);
            inputElement.focus();

            function saveText() {
                var newText = inputElement.val();
                if (newText !== currentText) {
                    $.ajax({
                        url: '/videos/' + videoId + '/' + field,
                        type: 'PUT',
                        data: { [field]: newText },
                        success: function(result) {
                            element.text(newText);
                        },
                        error: function(xhr, status, error) {
                            alert('An error occurred while updating the ' + field + '.');
                            element.text(currentText);
                        }
                    });
                } else {
                    element.text(currentText);
                }
            }

            inputElement.on('blur', saveText);
            inputElement.on('keydown', function(e) {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    saveText();
                }
            });
        });
    }

    // Handle transcription editing
    $('.video-transcription').off('click').on('click', function() {
        var transcriptionElement = $(this);
        var videoId = transcriptionElement.data('video-id');
        var currentTranscription = transcriptionElement.text();
        
        if ($('.video-edited-transcription[data-video-id="' + videoId + '"]').length === 0) {
            var editedTranscriptionElement = $('<div class="video-edited-transcription mt-2" data-video-id="' + videoId + '">' + currentTranscription + '</div>');
            transcriptionElement.after('<h5 class="mt-2">Edited Transcription:</h5>', editedTranscriptionElement);
            makeEditable(editedTranscriptionElement, videoId, 'editedTranscription');
        }
    });
});
</script>
</body>
</html>